server {
	listen 80 default_server;
	server_name _; # This is just an invalid value which will never trigger on a real hostname.
	error_log /proc/self/fd/2;
	access_log /proc/self/fd/1;

	root /etc/nginx/conf.d/html;
	index index.html index.htm;
	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}

}


server {
	listen 443 default_server;
	server_name _; # This is just an invalid value which will never trigger on a real hostname.
	proxy_buffering off;
	error_log /proc/self/fd/2;
	access_log /proc/self/fd/1;

        # ssl enabled
        ssl on;
        ssl_certificate /etc/nginx/conf.d/ssl/server.crt;
        ssl_certificate_key /etc/nginx/conf.d/ssl/server.key;
        ssl_session_timeout 5m;
        ssl_ciphers 'AES128+EECDH:AES128+EDH:!aNULL';
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.4.4 8.8.8.8 valid=300s;
        resolver_timeout 10s;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_dhparam /etc/nginx/conf.d/ssl/dhparam.pem;

        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        # hardcore security wiould be to disallow X-Frame_Options, but RStudio needs this capability to run
        # add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

		root /etc/nginx/conf.d/html;
		index index.html index.htm;
		location / {
			# First attempt to serve request as file, then
			# as directory, then fall back to displaying a 404.
			try_files $uri $uri/ =404;
			# Uncomment to enable naxsi on this location
			# include /etc/nginx/naxsi.rules
		}

}
